import sqlite3
import json

def fix_database_relationships():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –±–æ—Ç–∞–º–∏"""
    
    conn = sqlite3.connect('data/bot_constructor.db')
    cursor = conn.cursor()
    
    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute("SELECT * FROM users")
        users = cursor.fetchall()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        
        for user in users:
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ID={user[0]}, Telegram ID={user[1]}, Username={user[2]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –±–æ—Ç–æ–≤
        cursor.execute("SELECT * FROM user_bots")
        bots = cursor.fetchall()
        print(f"ü§ñ –ù–∞–π–¥–µ–Ω–æ –±–æ—Ç–æ–≤: {len(bots)}")
        
        for bot in bots:
            print(f"ü§ñ –ë–æ—Ç: ID={bot[0]}, Owner ID={bot[1]}, Name={bot[3]}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –≤–ª–∞–¥–µ–ª–µ—Ü
            cursor.execute("SELECT id FROM users WHERE id = ?", (bot[1],))
            owner_exists = cursor.fetchone()
            
            if not owner_exists:
                print(f"‚ùå –£ –±–æ—Ç–∞ {bot[0]} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤–ª–∞–¥–µ–ª–µ—Ü —Å ID {bot[1]}")
                
                # –ù–∞–∑–Ω–∞—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –≤–ª–∞–¥–µ–ª—å—Ü–∞
                if users:
                    new_owner_id = users[0][0]
                    cursor.execute("UPDATE user_bots SET owner_id = ? WHERE id = ?", 
                                 (new_owner_id, bot[0]))
                    print(f"‚úÖ –ù–∞–∑–Ω–∞—á–µ–Ω –Ω–æ–≤—ã–π –≤–ª–∞–¥–µ–ª–µ—Ü: {new_owner_id}")
        
        conn.commit()
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    finally:
        conn.close()

def create_test_user_and_bot():
    """–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–æ—Ç–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    conn = sqlite3.connect('data/bot_constructor.db')
    cursor = conn.cursor()
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute('''
        INSERT OR IGNORE INTO users (telegram_id, username, first_name, last_name) 
        VALUES (?, ?, ?, ?)
        ''', (123456, 'test_user', '–¢–µ—Å—Ç', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'))
        
        # –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("SELECT id FROM users WHERE telegram_id = ?", (123456,))
        user_id = cursor.fetchone()[0]
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID: {user_id}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞
        test_commands = json.dumps([
            {'name': 'start', 'response': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞!'},
            {'name': 'help', 'response': '–≠—Ç–æ –ø–æ–º–æ—â—å –ø–æ —Ç–µ—Å—Ç–æ–≤–æ–º—É –±–æ—Ç—É'},
            {'name': 'info', 'response': '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Å—Ç–æ–≤–æ–º –±–æ—Ç–µ'}
        ], ensure_ascii=False)
        
        cursor.execute('''
        INSERT OR REPLACE INTO user_bots 
        (owner_id, bot_token, bot_username, bot_name, commands, welcome_message, is_active) 
        VALUES (?, ?, ?, ?, ?, ?, ?)
        ''', (user_id, '123456789:TESTBOTtoken123456789', 'test_bot', 
              '–¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç', test_commands, '–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç.', 1))
        
        conn.commit()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    finally:
        conn.close()

if __name__ == "__main__":
    print("üõ†Ô∏è –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    fix_database_relationships()
    create_test_user_and_bot()
    print("\nüéØ –¢–µ–ø–µ—Ä—å –æ—Ç–∫—Ä–æ–π—Ç–µ http://127.0.0.1:5000 –∏ –≤–æ–π–¥–∏—Ç–µ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:")
    print("   User ID: 123456")
    print("   Username: test_user")