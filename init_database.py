import sqlite3
import json
from pathlib import Path

def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –¥–ª—è SQLiteStudio"""
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    Path('data').mkdir(exist_ok=True)
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('data/bot_constructor.db')
    cursor = conn.cursor()
    
    # –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ä–∞—Å—à–∏—Ä—è–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É)
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        telegram_id INTEGER UNIQUE NOT NULL,
        username VARCHAR(100),
        first_name VARCHAR(100),
        last_name VARCHAR(100),
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
        is_active BOOLEAN DEFAULT 1
    )
    ''')
    
    # –¢–∞–±–ª–∏—Ü–∞ –±–æ—Ç–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS user_bots (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        owner_id INTEGER NOT NULL,
        bot_token VARCHAR(100) UNIQUE NOT NULL,
        bot_username VARCHAR(100),
        bot_name VARCHAR(100) NOT NULL,
        commands JSON DEFAULT '[]',
        welcome_message TEXT DEFAULT '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
        settings JSON DEFAULT '{}',
        is_active BOOLEAN DEFAULT 0,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
        updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (owner_id) REFERENCES users (id)
    )
    ''')
    
    # –¢–∞–±–ª–∏—Ü–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–æ—Ç–æ–≤
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS bot_stats (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        bot_id INTEGER NOT NULL,
        date DATE DEFAULT CURRENT_DATE,
        messages_processed INTEGER DEFAULT 0,
        commands_executed INTEGER DEFAULT 0,
        users_count INTEGER DEFAULT 0,
        FOREIGN KEY (bot_id) REFERENCES user_bots (id)
    )
    ''')
    
    # –¢–∞–±–ª–∏—Ü–∞ –ø–ª–∞–≥–∏–Ω–æ–≤
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS plugins (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name VARCHAR(100) UNIQUE NOT NULL,
        description TEXT,
        version VARCHAR(20) DEFAULT '1.0.0',
        is_active BOOLEAN DEFAULT 0,
        settings JSON DEFAULT '{}'
    )
    ''')
    
    # –¢–∞–±–ª–∏—Ü–∞ —Å–≤—è–∑–µ–π –±–æ—Ç–æ–≤ —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS bot_plugins (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        bot_id INTEGER NOT NULL,
        plugin_id INTEGER NOT NULL,
        is_active BOOLEAN DEFAULT 1,
        settings JSON DEFAULT '{}',
        FOREIGN KEY (bot_id) REFERENCES user_bots (id),
        FOREIGN KEY (plugin_id) REFERENCES plugins (id),
        UNIQUE(bot_id, plugin_id)
    )
    ''')
    
    # –¢–∞–±–ª–∏—Ü–∞ –ª–æ–≥–æ–≤ (–¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞)
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS bot_logs (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        bot_id INTEGER NOT NULL,
        level VARCHAR(20) DEFAULT 'INFO',
        message TEXT NOT NULL,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (bot_id) REFERENCES user_bots (id)
    )
    ''')
    
    # –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤ SQLiteStudio
    try:
        # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        cursor.execute('''
        INSERT OR IGNORE INTO users (telegram_id, username, first_name, last_name) 
        VALUES (?, ?, ?, ?)
        ''', (123456789, 'test_user', '–¢–µ—Å—Ç', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'))
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç
        test_commands = json.dumps([
            {'name': 'start', 'response': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!'},
            {'name': 'help', 'response': '–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É'},
            {'name': 'info', 'response': '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ'}
        ], ensure_ascii=False)
        
        cursor.execute('''
        INSERT OR IGNORE INTO user_bots 
        (owner_id, bot_token, bot_username, bot_name, commands, welcome_message, is_active) 
        VALUES (?, ?, ?, ?, ?, ?, ?)
        ''', (1, '123456789:ABCdefGHIjklMNOpqrSTUvwxYZ', 'test_bot', 
              '–¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç', test_commands, '–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç.', 1))
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–ª–∞–≥–∏–Ω—ã
        cursor.execute('''
        INSERT OR IGNORE INTO plugins (name, description, is_active) 
        VALUES 
        ('weather', '–ü–æ–≥–æ–¥–Ω—ã–π –ø–ª–∞–≥–∏–Ω', 1),
        ('payments', '–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞', 1),
        ('notifications', '–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', 0)
        ''')
        
        # –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        cursor.execute('''
        INSERT OR IGNORE INTO bot_stats 
        (bot_id, messages_processed, commands_executed, users_count) 
        VALUES (?, ?, ?, ?)
        ''', (1, 1500, 450, 125))
        
        conn.commit()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
        print("üìä –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã:")
        print("   - users (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)")
        print("   - user_bots (–±–æ—Ç—ã)")
        print("   - bot_stats (—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)")
        print("   - plugins (–ø–ª–∞–≥–∏–Ω—ã)")
        print("   - bot_plugins (—Å–≤—è–∑–∏ –±–æ—Ç–æ–≤ —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏)")
        print("   - bot_logs (–ª–æ–≥–∏)")
        print("üéØ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    finally:
        conn.close()

def create_views():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤ SQLiteStudio"""
    
    conn = sqlite3.connect('data/bot_constructor.db')
    cursor = conn.cursor()
    
    # –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–æ—Ç–æ–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ
    cursor.execute('''
    CREATE VIEW IF NOT EXISTS v_bots_with_owners AS
    SELECT 
        ub.id,
        ub.bot_name,
        ub.bot_username,
        ub.is_active,
        u.username as owner_username,
        u.first_name as owner_first_name,
        ub.created_at,
        json_array_length(ub.commands) as commands_count
    FROM user_bots ub
    LEFT JOIN users u ON ub.owner_id = u.id
    ''')
    
    # –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–æ—Ç–æ–≤
    cursor.execute('''
    CREATE VIEW IF NOT EXISTS v_bots_stats AS
    SELECT 
        ub.bot_name,
        bs.date,
        bs.messages_processed,
        bs.commands_executed,
        bs.users_count,
        (bs.messages_processed * 1.0 / bs.users_count) as avg_messages_per_user
    FROM bot_stats bs
    JOIN user_bots ub ON bs.bot_id = ub.id
    ''')
    
    # –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤
    cursor.execute('''
    CREATE VIEW IF NOT EXISTS v_active_plugins AS
    SELECT 
        p.name,
        p.description,
        p.version,
        COUNT(bp.bot_id) as active_bots_count
    FROM plugins p
    LEFT JOIN bot_plugins bp ON p.id = bp.plugin_id AND bp.is_active = 1
    WHERE p.is_active = 1
    GROUP BY p.id
    ''')
    
    conn.commit()
    conn.close()
    print("‚úÖ –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≤ SQLiteStudio")

if __name__ == "__main__":
    init_database()
    create_views()
    print("\nüéÆ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª 'data/bot_constructor.db' –≤ SQLiteStudio")
    print("üìÅ –ü–æ–ª–Ω—ã–π –ø—É—Ç—å: data/bot_constructor.db")